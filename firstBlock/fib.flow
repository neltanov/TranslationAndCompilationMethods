import runtime;
import ds/array;

recursiveFib(n : int) -> [int] { 
    if (n > 2) {
        previous : [int] = recursiveFib(n - 1);
        concat(previous, [previous[n - 2] + previous[n - 3]]);
    } else if (n == 2) {
        [0, 1];
    } else if (n == 1) { 
        [0];
    } else {
        [];
    }
}

refFib(n: int, a: int, b: int, res: ref [int]) -> int {
    if (n > 0) {
        refArrayPush(res, a);
        refFib(n - 1, b, a+b, res);
    }
    else {
        refArrayPush(res, a);
        a;
    }
}

tailFib(n: int) -> [int] {
    if (n == 0) {
        [0];
    }
    else {
        arr = ref [];
        i = refFib(n-1, 0, 1, arr);
        ^arr;
    }
}

main() {
    println(recursiveFib(10));
    println(tailFib(10));
}